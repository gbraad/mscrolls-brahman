ESC	EQU	$1B
CHKIN	EQU	$FFC6
CLRCH	EQU	$FFCC
BASIN	EQU	$FFCF
CIA	EQU	$DD00
DAT	EQU	CIA+1
DDR	EQU	CIA+3
ICR	EQU	CIA+13
BUFFER	EQU	$E00		;use sprite area for buffer

	ORG	$B00

RS_VECT	JMP	READSECT
WS_VECT	JMP	WRITESECT
IN_VECT	JMP	INIT
DN_VECT	JMP	DONE

INIT	LDA	#$FF		;all lines to o/p
	STA	DDR
	RTS

DONE	LDA	#ESC		;send ESC,$FE to signal finished
	JSR	SENDBYTE
	LDA	#$FE
	JSR	SENDBYTE
	RTS

READSECT
	LDX	#5
	JSR	CHKIN
	LDX	#0
RS_LOOP
	JSR	BASIN
	STA	BUFFER,X
	INX
	BNE	RS_LOOP
	JSR	CLRCH
	RTS

WRITESECT
	LDX	#0
WS_LOOP
	LDA	BUFFER,X
	CMP	#ESC		;for each escape, send two
	BNE	WS_SEND
	JSR	SENDBYTE
	LDA	#ESC
WS_SEND
	JSR	SENDBYTE
	INX
	BNE	WS_LOOP
	RTS

; get a byte from parallel port, with handshaking
SENDBYTE
	STA	DAT
WAIT
	LDA	ICR
	AND	#$10
	BEQ	WAIT
	RTS
