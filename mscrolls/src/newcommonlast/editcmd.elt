**************************************************************
*
*	%G%
*	%W%
*
**************************************************************


	SECTION	"ADV",CODE

	include	"equates.i"
	include	"macros.i"
	include	"scenequ.i"
	include	"linemacros.i"


*--------------------------------
	
	XDEF	EDITCMD
	XREF	ERR4,QUIETWH,PICKONE,WDEPTH,STOTXT,CMDPNT,POSWRD,SAVETEXT
	XREF	INTEXT,FROMWCH,SAVEANS,RCLTXT,RCLSAVE,ADJECTIV,ADJUSTTEXT
	XREF	RELTXT,INBUFF,BRKWCH,SAVETXT,GSILENT,BACK.AWRD
	XREF	FNDWRD,BRKCOMMAND

EDITCMD

*  perform the text edit on the command line of inserting
*  adjectives for 'which' resolution.

*  NB: code factored from getadjph.


	TEST_W  ERR4(A4)     		;NO WHICHES?
	BEQ.S   11$          		;ok, do which.
	TEST_W  QUIETWH(A4)		;supress pickone (muck about)
	BNE     90$			;yes, just quit!
	CALL    PICKONE			;CHOOSE ONE ARBITRARILY
	MOVEQ   #0,D7
	BRA     90$			;EXIT
11$
	TEST_W	WDEPTH(A4)		;only on top level
	BNE.S   13$
	CALL    STOTXT
	MOVE.L  A6,CMDPNT(A4)		;save command point
13$
	DO	BACK.AWRD		;just the word (NO IGNORED ONES)
	DO	FNDWRD			;skip to start of word
	MOVE.L	A6,-(A7)		;save that place.
*	MOVE.L  POSWRD(A4),-(A7)
	MOVE.W  D3,-(A7)
	CALL	SAVETXT			; seconadary buffer used for rels
	CALL    INTEXT
	MOVE.W  (A7)+,D3
	BCLR	#0,BRKCOMMAND(A4)	;forced break to new command
	BNE	25$			;exit and forget any pending line
	ST      FROMWCH(A4)		;FLAG TO USE DATA.NOUN.BUF ALSO
	CALL	GSILENT			;get right type sneakily
	CLR.W   FROMWCH(A4)
	TEST_B  D7
	BNE     25$

    IFD	wantWHICHBITS
	XREF	DO.WHICHBITS
	CALL	DO.WHICHBITS
	BNE	25$			;fail code, exit
    ENDC	;wantWHICHBITS

	CMP.B   #SECT.ADJ,D6
	BEQ.S   39$
	CMP.B   #SECT.NOUN,D6		;IF NOUN ACCEPT IT
	BNE     20$			;EXIT AS ERROR
	CALL    SAVEANS			;is a single noun, save it
	TEST_W  WDEPTH(A4)
	BNE.S   14$
	CALL    RCLTXT			;recal text incase of a relph
	MOVE.L  CMDPNT(A4),A6		;back
14$
	MOVE.L  (A7)+,POSWRD(A4)
	ADDQ.L  #4,A7			;dump old A6
	
	RET
39$
	MOVE.L  (A7)+,A6
	CALL	RCLSAVE			;get back second buffer
	MOVE.L  A6,A5
      
      IFND	wantBIGPROG
	LEA     ADJECTIV(A4),A1
      ENDC
      
      IFD	wantBIGPROG
	LEA     ADJECTIV,A1
      ENDC

	MOVE.W  D5,D0
	BEQ.S   30$
40$
      IFND	wantBIGPROG
	TEST_B  (A1)+
      ENDC

      IFD	wantBIGPROG

	GetWTabByte			;D1 is STOMPED
	ADDQ.L	#1,A1
	TEST_B	D1

      ENDC

	BPL.S   40$
	SUBQ.W  #1,D0
	BNE.S   40$
30$
	MOVE.L	A6,D0			;save for use in adjusttext
    
      IFND	wantBIGPROG
	MOVE.B  (A1)+,(A6)+
      ENDC

      IFD	wantBIGPROG
	GetWTabByte
	ADDQ.L	#1,A1
	MOVE.B	D1,(A6)+
      ENDC

	BPL.S   30$         		;COPY ADJECTIVE
	MOVE.B  #$20,(A6)
	BCLR    #7,-(A6)    		;ZAP HI-BIT
	ADDQ.L  #2,A6

	TEST_W  WDEPTH(A4)		;top level?
	BNE.S   60$			;no.
	MOVE.L  A6,A1
	SUB.L   A5,A1			;length of adjective
	CALL	ADJUSTTEXT		;fix the WHICHFIX list
60$
	ADD.L   #RELTXT,A5
	SUB.L   #INBUFF,A5
70$
	MOVE.B  (A5)+,(A6)+ 		;REST
	BNE.S   70$
	CLR.B   (A6)			;an additional zero (weird?)
	MOVE.L  (A7)+,A6    		;OLD PHRASE
	DOGO	GETADJPH
20$
	PULL_L  D0/D1 			;RET A6, POSWRD
	ST      BRKWCH(A4)  		;BREAK OUT OF CURRENT CONTEXT
	DOGO	D72
 
25$
	PULL_L  D0/D1
	DOGO	D72

90$
	MOVE.L	(A7)+,D0
	RET



	END
