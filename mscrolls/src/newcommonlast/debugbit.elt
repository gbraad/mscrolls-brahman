**************************************************************
*
*	10/27/87
*	@(#)debugbit.elt	1.3
*
**************************************************************


	SECTION	"ADV",CODE

	include	"equates.i"
	include	"macros.i"
	include	"scenequ.i"

	XDEF	DO.SING,DEBUGBIT,GETHEX
	XREF	POSWRD,DBLIST,Adj_word_num,SUBJECT,STOTXT,DATIVE

DO.SING
DEBUGBIT

   IFNE	YCHEAT

TimeCodeORwantNUMBERS	SET	FALSE
   IFNE	TimeCode
TimeCodeORwantNUMBERS	SET	TRUE
   ENDC
   IFD	wantNUMBERS
TimeCodeORwantNUMBERS	SET	TRUE
   ENDC



	CMP.B   #Adj_word_num,D5		;ADJ
	BEQ.S   04$	

   ENDC

	DO	FNDWRD				;GET A6= START OF NUM
	MOVE.L  A6,POSWRD(A4)			;SAVE FOR LATER!
	CALL	GETHEX
	MOVE.L  D6,D0
04$
	
	LSL.W   #1,D5
	LEA	DBLIST(PC),A0
	LEA	0(A0,D5.W),A0
	MOVE.W  (A0),D5
	JMP	0(A0,D5.W)
05$
	DOGO	DBEXIT
 
   IFNE	YCHEAT
 
HEXLIST
 
	DC.B	'0123456789ABCDEF'

 
GETHEX
 
	MOVE.L	D5,-(A7)		;used as a space flag
	MOVEQ	#0,D6
	MOVE.L	D6,D5
10$
	MOVE.B  (A6)+,D1
	CMP.B   #$40,D1
	BMI.S   15$
	AND.B   #$5F,D1			;Lower case it if ness.
15$
	IFNE	TimeCodeORwantNUMBERS
	CMP.B	#' ',D1
	BNE.S	17$
	BSET	#0,D5
	BEQ.S	10$			;forget one space
	ENDC	;TimeCodeORwantNUMBERS
17$
	LEA	HEXLIST(PC),A0
	MOVEQ   #15,D0
20$
	CMP.B   0(A0,D0),D1
	DBEQ	D0,20$
	TEST_W  D0
	BMI.S   30$			;END OF HEX
	LSL.L   #4,D6   
	OR.B	D0,D6	
	MOVEQ	#0,D5			;fod space's flag
	BRA.S   10$ 
30$
	SUBQ.L  #1,A6
	MOVE.L	(A7)+,D5
	RET
 
   ENDC

	IFEQ	YCHEAT
 
* IF NOT YCHEAT THEN 'GETHEX' GETS DEC!!!!

MUL10	MACRO
	LSL.W	#1,\1
	MOVE.W  \1,-(A7)
	LSL.W   #2,\1
	ADD.W   (A7)+,\1
	ENDM

 
GETHEX

	IFNE	M68000
 
	MOVE.B  (A6)+,D6			;GET FIRST BYTE
	MOVE.B  (A6)+,D1			;GET SECOND BYTE
	MOVE.B  (A6)+,D2			;bloody rg AND b
	CMP.B   #$30,D6
	BLT.S   80$				;EXIT RESULT=0
	CMP.B   #$39,D6
	BGT.S   80$
	AND.W   #$F,D6
	CMP.B   #$30,D1
	BLT.S   10$
	CMP.B   #$39,D1
	BGT.S   10$
	AND.W   #$F,D1
	CMP.B   #$30,D2
	BLT.S   05$
	CMP.B   #$39,D2
	BGT.S   05$
	AND.W   #$F,D2
	MUL10	D6
	MUL10	D1
	BRA.S   06$
05$
	MOVEQ   #0,D2
06$
	MUL10	D6
	ADD.W   D1,D6
	ADD.W   D2,D6
	RET
10$
	AND.W   #$0F,D6
	RET
80$ 
   ENDC
	RET
	
	
   ENDC



	END
