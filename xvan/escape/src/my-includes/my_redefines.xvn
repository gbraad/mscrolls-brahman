
<<<<<<< HEAD
$REDEFINE_VERB ask
 SCOPE all_locs

 PROLOGUE
   if not(testflag(o_actor.f_alive)) then
     printcr("Do you realize that you are talking to [a] [o_actor]?.")
     disagree()
   endif

   if equal(o_spec, o_nst) then
     printcr("I don't know what you're talking about.")
     disagree()
   endif

 "ask [o_subject] about [o_spec]"
   DISAMBIGUATION_RULES
    if equal(o_subject, o_nst) then score(-15) endif  # make nst always lose
    if testflag(o_spec.f_seenbefore) then score(5) endif
    if isobject(o_subject) then
      if owns(l_exit, o_subject) then
        if owns(l_exit, o_player) then 
          score(5)
        else
          score(-5)          
   END_RULES

   if equal(o_subject, o_actor) then
     printcr("Talking to yourself is a sign of pending mental collapse.")
   else
     if not(testflag(o_spec.f_seenbefore)) then
       printcr("We haven't found that yet.")
     else
       printcr("Just [a] [o_spec].")

  DEFAULT
    printcr("I only understood you as far as wanting to ask something.")
    if testflag(o_player.f_verb_help) then
      printcr("")
      Printcr("An example of the syntax I understand is:")
      printcr("  'ask Fred about the old wooden chest'")
      printcr("(to turn off these help messages, type 'help')")

ENDVERB


$REDEFINE_VERB is
 SCOPE all_locs
=======
$REDEFINE_TRIGGERS
>>>>>>> 72d7449e33257b77bc124b16a988a408eddcf5b1

t_entrance
  if not(islit(o_player)) then
    printcr("It is pitch black.")
    disagree()
  endif

  # part for location
  if equal(%this, l_location) then
    printcrbold(%this)
    if not(testflag(%this.f_seenbefore)) or testflag(o_player.f_verbose) then
      print(%this.d_entr_long)
      setflag(f_seenbefore)
    else
      print(%this.d_entr_short)
    endif
    agree()
  endif
  # part for objects
  if cansee(o_player, %this) then
    if equal(owner(%this), owner(o_player)) then
      # same containment level
      if testflag(%this.f_seenbefore) then
        print(%this.d_entr_short)
      else
        print(%this.d_entr_long)
        setflag(%this.f_seenbefore)
    else
      if not(owns(o_player, %this, 0)) and not(owns(o_npc, %this, 0)) then
        print("\n[this.r_preposition] [the] ")
        print(owner(%this))
        printcr(" is [a] [this].")
      endif
    endif
    setflag(%this.f_seenbefore)
  endif
  agree()

t_ask
  printcr(%this.d_ask)


$REDEFINE_VERB goto
 SCOPE ALL_LOCS
 PROLOGUE
   if not(equal(o_actor, o_player)) then
     printcr("The 'goto' action only works for the player.")
     disagree()
   endif
   if equal(o_subject, %none) then
     agree()
   else
     if isobject(o_subject) then
       if equal(o_subject, o_nst) then
         printcr("I don't know any such location.")
       else
         printcr("Goto can only be used with locations.")
       endif
       disagree()
     else
       if not(testflag(o_subject.f_seenbefore)) then
         printcr("At this point in the game I have no recollection /
                  of that location.")
         disagree()

 "goto [o_subject]"
   DISAMBIGUATION_RULES
    if testflag(o_subject.f_seenbefore) then score(5) endif
     if owns(l_exit, o_subject) then
        if owns(l_exit, o_player) then 
          score(5)
        else
          score(-5)          
   END_RULES

   # we should never get here, because the player object has
   # a trigger for "goto [o_subject]"
   printcr("You have to find the way to [the] [o_subject] by yourself.")

 DEFAULT
   printcr("I only understood you as far as willing to go somewehere.")

ENDVERB

