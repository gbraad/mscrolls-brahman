# FILE FOR XVAN 2.3

# Cloak of Darkness demo game

#=============
# Verb section
#=============

# The verb 'go' must always be present. The interpreter will
# insert it in front of direction commands (like: "n").


$verb go    #DO NOT REMOVE THIS VERB
  "go [dir]"
  "go to [dir]"
    printcr("You can't go that way.")

  DEFAULT
    printcr("I do not understand that sentence.")
ENDVERB


$VERB are ENDVERB


$VERB drop
  "drop"
    printcr("What do you want to [action]?")
    getsubject()

  "drop [o_subject]"
    if (owns(o_actor, o_subject)) then
      clearflag(o_subject.f_bypass)
      move(o_subject, owner(owner(o_subject)))
      printcr("[o_subject]: dropped.")
    else
      printcr("One must hold something before it can be dropped...")

  DEFAULT
    printcr("You don't need that to finish this story.")
ENDVERB


$VERB examine SYNONYM x
 PROLOGUE
  if not(islit(o_actor)) then
    printcr("It's too dark to even see, let alone examine stuff.")
    disagree()

  "examine"
    printcr("What do you want to [action]?")
    getsubject()

  "examine [o_subject]"
     printcr("You see nothing special about [the] [o_subject].")
ENDVERB


$VERB hang
  PROLOGUE
    # Actor must hold the subject.
    if (not(equal(o_subject, %none)) and not(equal(o_spec, %none))) then
      if not(owns(o_actor, o_subject)) then
        print("[the] [o_actor] must be holding [the] [o_subject] before even /
               trying to [action] that!")
        disagree()
      endif
    endif
  
 "hang"
   print("What do you want to [action]?")
   getsubject()

 "hang [o_subject]"
   print("Where do you want to [action] [the] [o_subject]?")
   getspec()

 "hang [o_subject] on [o_spec]"
   printcr("[the] [o_actor] can't [action] [the] [o_subject] on [the] [o_spec].")

 DEFAULT
   printcr("That won't work.")
ENDVERB


$VERB has ENDVERB


$VERB have ENDVERB


$VERB inventory SYNONYM i
 SCOPE ACTOR_ONLY
 PROLOGUE
   if not(islit(o_actor)) then
     printcr("You can't see a thing!")
     disagree()
   else
   printcr("You are carrying:")
   indent(2)

 EPILOGUE
   indent(-2)
       
  DEFAULT
    indent()
    printcr("Nothing, you are empty-handed.")
ENDVERB


$VERB is ENDVERB


$VERB look SYNONYM l
 PROLOGUE
  if not(islit(o_actor)) then
    printcr("It is pitch black.")
    disagree()
  else
    agree()

  "look [prepos] [o_subject]"
     print("There's nothing of interest [prepos] [the] [o_subject].")

  "look [dir]"
  "look to [dir]"
    if valdir(l_location, %dir) then
      printcr("There is an exit to the [dir].")

  DEFAULT
    printcr("Shall we try something else?")
ENDVERB


$VERB put
  "put"
    printcr("What do you want to [action]?")
    getsubject()

  "put [o_subject]"
    printcr("Where do you want to [action] the [o_subject]?")
    getspec()

  "put [o_subject] [prepos] [o_spec]"
    printcr("[the] [o_actor] cannot [action] [the] [o_subject] [prepos] [the] [o_spec].")
    agree()

  DEFAULT
    printcr("[the] [o_actor] cannot do that.")
ENDVERB


$VERB quit SYNONYM q
 "quit"
   print("Do you really want to quit? ")
   if yesno() then
     quit()
ENDVERB


$VERB read
  "read"
    printcr("What do you want to read?")
    getsubject()

  "read [o_subject]"
    printcr("You tell me how to read [a] [o_subject]...")

 DEFAULT
   printcr("That won't work.")
ENDVERB


$VERB restore
 "restore"
   restore()
ENDVERB


$VERB save
 "save"
   save()
ENDVERB


$VERB score
  "score"
    printcr("Your score is [o_player.r_score] in [m_init] moves.")
ENDVERB


$VERB take SYNONYM get SYNONYM grab
  "take"
    printcr("What do you want to [action]?")
    getsubject()

  "take [o_subject]"
     IF owns(o_actor, o_subject) THEN
       printcr("[the] [o_actor] already [o_actor.r_have] [the] [o_subject].")
     ELSE
       IF testflag(o_subject.f_takeable) THEN
         move(o_subject, o_actor)
         IF equal(o_actor, o_player) THEN
           setflag(o_subject.f_bypass)
         ENDIF
         printcr("[o_subject]: taken.")
       ELSE
         print("[the] [o_actor] can't take [the] [o_subject].")
       ENDIF
     ENDIF
     agree()
ENDVERB


$VERB testmode
  # read input from a file
  DEFAULT
    testmode()
ENDVERB


$VERB transcript
  # copy all input and output to a file
  DEFAULT
    transcript()
ENDVERB


$VERB wear
  PROLOGUE
    if not(testflag(o_subject.f_wearable)) then
      printcr("[the] [o_subject] is not something that can be worn.")
      disagree()
    endif
    if testflag(o_subject.f_worn) then
      printcr("[the] [o_actor] [o_actor.r_is] already wearing [the] [o_subject].")
      disagree()
    endif
ENDVERB
